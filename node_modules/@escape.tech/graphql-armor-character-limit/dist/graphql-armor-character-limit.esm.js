import { GraphQLError } from 'graphql';

const characterLimitDefaultOptions = {
  maxLength: 15000
};

const characterLimitPlugin = options => {
  const maxLength = (options === null || options === void 0 ? void 0 : options.maxLength) ?? characterLimitDefaultOptions.maxLength;
  return {
    onParse({
      parseFn,
      setParseFn
    }) {
      setParseFn((source, options) => {
        const query = typeof source === 'string' ? source : source.body;

        if (query && query.length > maxLength) {
          throw new GraphQLError(`Query is too large.`);
        }

        return parseFn(source, options);
      });
    }

  };
};

export { characterLimitDefaultOptions, characterLimitPlugin };
