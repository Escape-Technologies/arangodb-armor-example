import { GraphQLError } from 'graphql';

const blockFieldSuggestionsDefaultOptions = {
  mask: '[Suggestion message hidden by GraphQLArmor]'
};

const formatter = (error, mask) => {
  if (error instanceof GraphQLError) {
    error.message = error.message.replace(/Did you mean ".+"/g, mask);
  }

  return error;
};

const blockFieldSuggestionsPlugin = options => {
  var _options$mask;

  const mask = (_options$mask = options === null || options === void 0 ? void 0 : options.mask) !== null && _options$mask !== void 0 ? _options$mask : blockFieldSuggestionsDefaultOptions.mask;
  return {
    onValidate: () => {
      return function onValidateEnd({
        valid,
        result,
        setResult
      }) {
        if (!valid) {
          setResult(result.map(error => formatter(error, mask)));
        }
      };
    }
  };
};

export { blockFieldSuggestionsDefaultOptions, blockFieldSuggestionsPlugin };
