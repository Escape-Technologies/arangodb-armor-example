import type { Plugin } from '@envelop/core';
import { OperationDefinitionNode, ValidationContext } from 'graphql';
declare type MaxDepthOptions = {
    n?: number;
    ignoreIntrospection?: boolean;
};
declare class MaxDepthVisitor {
    readonly OperationDefinition: Record<string, any>;
    private readonly context;
    private readonly config;
    private onError;
    constructor(context: ValidationContext, onError: (msg: string) => any, options?: MaxDepthOptions);
    onOperationDefinitionEnter(operation: OperationDefinitionNode): void;
    private countDepth;
}
declare const maxDepthRule: (onError: (msg: string) => any, options?: MaxDepthOptions) => (context: ValidationContext) => MaxDepthVisitor;
declare const maxDepthPlugin: (options?: MaxDepthOptions) => Plugin;
export { maxDepthRule, MaxDepthOptions, maxDepthPlugin };
